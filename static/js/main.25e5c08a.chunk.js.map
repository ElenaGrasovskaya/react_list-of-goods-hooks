{"version":3,"sources":["App.tsx","index.tsx"],"names":["Sort","goodsFromServer","App","useState","selectedSort","setSelectedSort","isReversed","setIsReversed","sortedGoods","goods","sortMethod","newGoods","ALPHABETICALLY","sort","good1","good2","localeCompare","BY_LENGTH","length","RESET","reverse","getSortedGoods","isResetHidden","handleSortChange","eventName","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAKKA,E,oFAAAA,K,uBAAAA,E,mBAAAA,E,kBAAAA,E,eAAAA,M,KAOE,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA6BWC,EAAgB,WAC3B,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA3Be,SACrBC,EACAC,EACAJ,GAEA,IAAIK,EAAQ,YAAOF,GAEnB,OAAQC,GACN,KAAKV,EAAKY,eACRD,EAAWA,EAASE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAC/D,MACF,KAAKf,EAAKiB,UACRN,EAASE,OAAOA,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAC5D,MACF,KAAKlB,EAAKmB,MACRR,EAAQ,UAAOV,GACf,MACF,QACE,OAAOK,EAAaK,EAASS,UAAYT,EAG7C,OAAOL,EAAaK,EAASS,UAAYT,EAMrBU,CAAepB,EAAiBG,EAAcE,GAE5DgB,EAAiC,KAAjBlB,IAAwBE,EAExCiB,EAAmB,SAACC,GACxB,GAAIA,IAAcpB,EAIlB,OAAIoB,IAAcxB,EAAKmB,OACrBd,EAAgB,SAChBE,GAAc,SAKhBF,EAAgBmB,IAOlB,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,CACZ,iBAAkBvB,IAAiBJ,EAAKY,eACxC,0BAA2BR,IAAiBJ,EAAKY,iBAEnDgB,QAAS,kBAAML,EAAiBvB,EAAKY,iBANvC,iCAWA,wBACEc,KAAK,SACLD,UAAWE,IAAG,CACZ,oBAAqBvB,IAAiBJ,EAAKiB,UAC3C,6BAA8Bb,IAAiBJ,EAAKiB,YAEtDW,QAAS,kBAAML,EAAiBvB,EAAKiB,YANvC,4BAWA,wBACES,KAAK,SACLD,UAAWE,IAAG,CACZ,oBAAqBrB,EACrB,8BAA+BA,IAEjCsB,QAnCc,WACpBrB,GAAeD,IA4BX,sBAWEgB,GACA,wBACEI,KAAK,SACLD,UAAWE,IAAG,CACZ,mBAAoBvB,IAAiBJ,EAAKmB,MAC1C,4BAA6Bf,IAAiBJ,EAAKmB,QAErDS,QAAS,kBAAML,EAAiBvB,EAAKmB,QANvC,sBAYJ,6BACGX,EAAYqB,KAAI,SAACC,GAAD,OACf,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC7HlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.25e5c08a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nenum Sort {\n  ALPHABETICALLY = 'alpha',\n  BY_LENGTH = 'length',\n  REVERSE = 'reverse',\n  RESET = 'reset',\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Goods = string[];\n\nconst getSortedGoods = (\n  goods: Goods,\n  sortMethod: string,\n  isReversed: boolean,\n) => {\n  let newGoods = [...goods];\n\n  switch (sortMethod) {\n    case Sort.ALPHABETICALLY:\n      newGoods = newGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n    case Sort.BY_LENGTH:\n      newGoods.sort().sort((good1, good2) => good1.length - good2.length);\n      break;\n    case Sort.RESET:\n      newGoods = [...goodsFromServer];\n      break;\n    default:\n      return isReversed ? newGoods.reverse() : newGoods;\n  }\n\n  return isReversed ? newGoods.reverse() : newGoods;\n};\n\nexport const App: React.FC = () => {\n  const [selectedSort, setSelectedSort] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const sortedGoods = getSortedGoods(goodsFromServer, selectedSort, isReversed);\n\n  const isResetHidden = selectedSort === '' && !isReversed;\n\n  const handleSortChange = (eventName: Sort) => {\n    if (eventName === selectedSort) {\n      return;\n    }\n\n    if (eventName === Sort.RESET) {\n      setSelectedSort('');\n      setIsReversed(false);\n\n      return;\n    }\n\n    setSelectedSort(eventName);\n  };\n\n  const handleReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn({\n            'button is-info': selectedSort === Sort.ALPHABETICALLY,\n            'button is-info is-light': selectedSort !== Sort.ALPHABETICALLY,\n          })}\n          onClick={() => handleSortChange(Sort.ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn({\n            'button is-success': selectedSort === Sort.BY_LENGTH,\n            'button is-success is-light': selectedSort !== Sort.BY_LENGTH,\n          })}\n          onClick={() => handleSortChange(Sort.BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn({\n            'button is-warning': isReversed,\n            'button is-warning is-light': !isReversed,\n          })}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {!isResetHidden && (\n          <button\n            type=\"button\"\n            className={cn({\n              'button is-danger': selectedSort === Sort.RESET,\n              'button is-danger is-light': selectedSort !== Sort.RESET,\n            })}\n            onClick={() => handleSortChange(Sort.RESET)}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        {sortedGoods.map((good) => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}